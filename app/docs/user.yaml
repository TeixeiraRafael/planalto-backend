basePath: '/api-docs'
tags:
- name: user
  description: User routes

/register:
  post:
    summary: Creates a user
    description: Validates user data, registers and returns the persisted data (password field is redacted).
    tags:
    - user
    requestBody:
      required: true
      content:
        application/json:
          schema: 
            type: object
            properties:
              name:
                type: string
              email:
                type: string
              password:
                type: string
              password_confirmation:
                type: string

    responses:
      '200':
        description:  |
          ### Success
          Returns a user object representing the persisted data
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 318765
                name:
                  type: string
                  example: "John Doe"
                email:
                  type: string
                  example: "john@mail.com"
                role_id:
                  type: integer
                  example: 7
                created_at:
                  type: string
                  example: "2021-11-05T04:19:25.624Z"
                updated_at:
                  type: string
                  example: "2021-11-05T04:19:25.624Z"

      '412':
        description: |
          ### Validation error 
          
          Returns a boolean, a error message and a json object containing the field names associated to a list of their respective validation errors.


        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Validation failed"
                errors:
                  type: object
                  properties:
                    password:
                      type: array
                      items:
                        type: string
                        example: "The password field is required."

              
/user:
  get:
    summary: Retrieves a list of all the users
    description: The user making the request must have manager or root privileges.
    tags:
    - user
    parameters:
      - in: query
        name: access_token
        schema:
          type: string
    
    responses:
      '200':
        description:  |
          ### Success
          Returns a boolean and a list of users
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 318765
                      name:
                        type: string
                        example: "John Doe"
                      email:
                        type: string
                        example: "john@mail.com"
                      role_id:
                        type: integer
                        example: 7
                      created_at:
                        type: string
                        example: "2021-11-05T04:19:25.624Z"
                      updated_at:
                        type: string
                        example: "2021-11-05T04:19:25.624Z"

      
      '403':
        description:  |
          ### Permission denied
          The requesting user does not have the permissions required
        content:
          application/json:
            schema:
              type: object
              properties:
                success: 
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "You do not have permission to perform such action"

/user/{id}:
  get:
    summary: Retrievies a single user's information
    description: Basic users can only request their own information. Managers can request information from any other users.
    tags:
    - user
    parameters:
      - in: query
        name: access_token
        schema:
          type: string
    
    responses:
      '200':
        description:  |
          ### Success
          Returns a boolean and a user object
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 318765
                name:
                  type: string
                  example: "John Doe"
                email:
                  type: string
                  example: "john@mail.com"
                role_id:
                  type: integer
                  example: 7
                created_at:
                  type: string
                  example: "2021-11-05T04:19:25.624Z"
                updated_at:
                  type: string
                  example: "2021-11-05T04:19:25.624Z"
      '403':
        description:  |
          ### Permission denied
          The requesting user does not have the permissions required
        content:
          application/json:
            schema:
              type: object
              properties:
                success: 
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "You do not have permission to perform such action"

  put:
    summary: Updates an user
    description: Validates user data, registers and returns the persisted data (password field is redacted).
    tags:
    - user
    requestBody:
      required: true
      content:
        application/json:
          schema: 
            type: object
            properties:
              access_token:
                type: string 
              name:
                type: string
              email:
                type: string

    responses:
      '200':
        description:  |
          ### Success
          Returns a user object representing the persisted data
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 318765
                name:
                  type: string
                  example: "John Doe"
                email:
                  type: string
                  example: "john@mail.com"
                role_id:
                  type: integer
                  example: 7
                created_at:
                  type: string
                  example: "2021-11-05T04:19:25.624Z"
                updated_at:
                  type: string
                  example: "2021-11-05T04:19:25.624Z"

      '412':
        description: |
          ### Validation error 
          
          Returns a boolean, a error message and a json object containing the field names associated to a list of their respective validation errors.


        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Validation failed"
                errors:
                  type: object
                  properties:
                    password:
                      type: array
                      items:
                        type: string
                        example: "Invalid email."
      '403':
        description:  |
          ### Permission denied
          The requesting user does not have the permissions required
        content:
          application/json:
            schema:
              type: object
              properties:
                success: 
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "You do not have permission to perform such action"

  delete:
    summary: Deletes an user
    description: Users can only delete themselves. Root users can delete any other user.
    tags:
    - user
    requestBody:
      required: true
      content:
        application/json:
          schema: 
            type: object
            properties:
              access_token:
                type: string

    responses:
      '200':
        description:  |
          ### Success
          Returns a user object representing the persisted data
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 318765
                name:
                  type: string
                  example: "John Doe"
                email:
                  type: string
                  example: "john@mail.com"
                role_id:
                  type: integer
                  example: 7
                created_at:
                  type: string
                  example: "2021-11-05T04:19:25.624Z"
                deleted_at:
                  type: string
                  example: "2021-11-05T04:19:25.624Z"

      '403':
        description:  |
          ### Permission denied
          The requesting user does not have the permissions required
        content:
          application/json:
            schema:
              type: object
              properties:
                success: 
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "You do not have permission to perform such action"